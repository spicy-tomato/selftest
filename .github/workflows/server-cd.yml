name: Server CD

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version of the Docker container'
        required: true
        type: string

jobs:
  deploy-container:
    runs-on: ubuntu-22.04

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Execute bash script to generate .env file
      - name: Generate .env file
        run: |
          chmod +x ./scripts/generate-env.sh
          DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} VERSION=${{ github.event.inputs.version }} \
          MY_DOMAIN=${{ secrets.MY_DOMAIN }} CERT_PATH=${{ secrets.CERT_PATH }} \
          SERVER_PORT=${{ vars.SERVER_PORT }} DEFAULT_NETWORK=${{ vars.DEFAULT_NETWORK }} \
          ./scripts/generate-env.sh \
          DOCKER_USERNAME VERSION MY_DOMAIN CERT_PATH SERVER_PORT DEFAULT_NETWORK
        shell: bash

      # Step 3: Deploy files to server
      - name: Deploy files to server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            # Define paths
            SERVER_PATH="${{ secrets.SERVER_PATH }}"
            ENV_PATH="$SERVER_PATH/.env"
            COMPOSE_PATH="$SERVER_PATH/docker-compose.yml"

            # Ensure target directory exists
            mkdir -p "$SERVER_PATH"

            # Copy files
            scp .env ${{ secrets.SSH_USER }}@${{ secrets.VPS_HOST }}:$ENV_PATH
            scp ./apps/server/docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.VPS_HOST }}:$COMPOSE_PATH

            # Run Docker Compose
            docker compose -f "$COMPOSE_PATH" up -d --force-recreate
